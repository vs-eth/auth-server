---
# LDAP BaseDN settings (you need to change these)
auth_ldap_domain: None
auth_ldap_domain_ldap: None
auth_ldap_domain_suffix: None
# If you have subdomains with hosts, you might want to add them here
auth_ldap_domain_subdomains: []

# If your LDAP servers are not mutually reachable via their FQDN, set this for
# replication
auth_ldap_use_external_domain: False
auth_ldap_external_domain: None

# LDAP admin credentials (you need to change these)
auth_ldap_admin_pwd: None
auth_ldap_sync_pwd: None

# LDAP init source (you need to change this)
# Init source designates the ldap server whose contents should be copied to all
# other servers on iniy
auth_ldap_init_source: False

# Kerberos admin credentials (you need to change these)
auth_kerberos_ldap_password: False
auth_kerberos_database_master_key: False
# Principals to be granted admin rights
auth_kerberos_admin_privs: []
# - principal: foo@EXAMPLE.ORG
#   privileges: '*'
#   target: '*'

# Group that all LDAP/kerberos servers are in (you probably need to change this)
auth_ldap_group: core

# TLS for openLDAP
auth_ldap_have_tls: True
auth_ldap_ssl_cert_path: /etc/ldap/server.pem
auth_ldap_ssl_key_path: /etc/ldap/server.key
auth_ldap_ssl_ca_path: /etc/ldap/ca.pem
auth_ldap_ssl_ca_path_src: /etc/dirsrv/ca.pem

auth_ldap_ssl_cn: "{{ ansible_fqdn }}"
auth_ldap_ssl_desc: "PKI"

# Enctypes for recent kerberos
auth_kerberos_enctypes: "aes256-cts-hmac-sha384-192 aes128-cts-hmac-sha256-128 aes256-cts-hmac-sha1-96 aes128-cts-hmac-sha1-96"

# Elliptic curves for SPAKE
auth_kerberos_curves: "edwards25519"

# Users to create
auth_ldap_users: []

# Users to grant 'read' permission on all non-secret attributes of users and
# groups. You'll probably need to list service accounts in here.
auth_ldap_allow_read: []

# Which kerberos services to support (service in service/host@REALM). Each
# get's it's own OU, thats why you need to list them
auth_ldap_services:
  - dns
  - ldap
  - host

# LDAP containers to create for services. Even if you don't use DNS it doesn't
# hurt to create it's base.
auth_ldap_service_bases:
  - name: dns
    objectClass:
      - top
      - nsContainer
  - name: postfixconfig
    objectClass:
      - top
      - postfixConfiguration

# Service accounts and keytabs to create. The first two are mandatory, the DNS
# one can be removed if you're not going to use it.
auth_ldap_service_accounts:
  - service: ldap
    keytab: /etc/dirsrv/ds.keytab
    ktowner: dirsrv
    ktgroup: root
    ktmode: "0640"
  - service: host
    keytab: /etc/krb5.keytab
    ktowner: dirsrv
    ktgroup: root
    ktmode: "0600"
  - service: DNS
    keytab: /etc/bind/krb5.keytab
    ktowner: bind
    ktgroup: root
    ktmode: "0640"

# Permissions. This should give you a sensible default, tweak as needed
auth_ldap_noncritical_filter: "dn || krbLastSuccessfulAuth || krbLastPwdChange || krbPasswordExpiration || krbLoginFailedCount || uid || objectClass || uidNumber || gidNumber || sn || homeDirectory || mail || givenName || cn || sendAlias || alias || mailboxTransport || canReceiveExternally || canSendExternally || mailboxQuota || primaryMail || memberOf"
auth_ldap_noncritical_group_filter: "dn || objectClass || cn || member || memberUid || description || uniqueMember || alias || sendAlias"
auth_ldap_permissions:
  - target: "{{ auth_ldap_domain_ldap }}"
    acls:
      - (target="ldap:///{{ auth_ldap_domain_ldap }}")(targetattr = "cn || dn || uid || objectClass")(targetfilter = "(|(objectClass=dcObject)(objectClass=organizationalUnit))")(version 3.0; acl "Allow everybody searches at root of tree"; allow(read, search, compare) userdn="ldap:///anyone";)
  - target: "ou=Users,{{ auth_ldap_domain_ldap }}"
    acls:
      - (target="ldap:///ou=Users,{{ auth_ldap_domain_ldap }}")(targetattr = "*")(version 3.0; acl "Allow kerberos service account access to sensitive user fields"; allow(all) userdn="ldap:///cn=krbbind,ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}";)
      - (target="ldap:///ou=Users,{{ auth_ldap_domain_ldap }}")(targetattr = "{{ auth_ldap_noncritical_filter }}")(version 3.0; acl "Allow users to read their own attributes"; allow(search, read, compare) userdn="ldap:///self";)
      - (target="ldap:///ou=Users,{{ auth_ldap_domain_ldap }}")(targetattr = "{{ auth_ldap_noncritical_filter }} || krbPrincipalName")(version 3.0; acl "Allow LDAPReaders Group to read user attributes"; allow(search, read, compare) groupdn="ldap:///cn=sys_ldap_readers,ou=Groups,{{ auth_ldap_domain_ldap }}";)
  - target: "ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}"
    acls:
      - (target="ldap:///ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}")(targetattr = "*")(version 3.0; acl "Allow kerberos service account access to sensitive user fields"; allow(all) userdn="ldap:///cn=krbbind,ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}";)
      - (target="ldap:///ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}")(targetattr = "{{ auth_ldap_noncritical_filter }} || krbPrincipalName")(version 3.0; acl "Allow LDAPReaders Group to read technical user attributes"; allow(search, read, compare) groupdn="ldap:///cn=sys_ldap_readers,ou=Groups,{{ auth_ldap_domain_ldap }}";)
  - target: "ou=Groups,{{ auth_ldap_domain_ldap }}"
    acls:
      - (target="ldap:///ou=Groups,{{ auth_ldap_domain_ldap }}")(targetattr = "{{ auth_ldap_noncritical_group_filter }}")(version 3.0; acl "Allow LDAPReaders Group to read group membership"; allow(search, read, compare) groupdn="ldap:///cn=sys_ldap_readers,ou=Groups,{{ auth_ldap_domain_ldap }}";)
      - (target="ldap:///ou=Groups,{{ auth_ldap_domain_ldap }}")(targetattr = "{{ auth_ldap_noncritical_group_filter }}")(version 3.0; acl "Allow users to read groups"; allow(search, read, compare) userdn="ldap:///uid=*,ou=Users,{{ auth_ldap_domain_ldap }}";)
  - target: "cn=Kerberos,{{ auth_ldap_domain_ldap }}"
    acls:
      - (targetattr=*)(version 3.0; acl "Allow kerberos service account access to kerberos subtree"; allow(all) userdn="ldap:///cn=krbbind,ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}";)
  - target: "cn=dns,{{ auth_ldap_domain_ldap }}"
    acls:
      - (targetattr=*)(version 3.0; acl "Allow DNS service accounts access to DNS subtree"; allow(all) userdn="ldap:///uid=*,ou=dns,ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}";)
  - target: "cn=postfixconfig,{{ auth_ldap_domain_ldap }}"
    acls:
      - (targetattr=*)(version 3.0; acl "Allow mailserver service accounts access to mail subtree"; allow(all) userdn="ldap:///cn=mailbind,ou=TechnicalUsers,{{ auth_ldap_domain_ldap }}";)

# System user, do not touch (except to add more)!
auth_ldap_system_users:
  - name: krbbind
    id: krbbind
    uid: 10000
    gid: 1000
    initialPassword: "{{ auth_kerberos_ldap_password }}"

auth_ldap_user_objectclasses:
  - posixAccount
  - top
  - inetOrgPerson

# Whether to actually store the pam kerberos passthrough config
auth_ldap_store_pam: True

# Whether to enable the memberOf plugin
auth_ldap_use_memberof_plugin: False


# For additional schemas
# auth_ldap_additional_schema:
#   - name: "Additional"
#     file: "files/ldap/additionalSchema.ldif"
#     checkattr: "addSchema"
